name: N2N多线程版
on:
  push:
    branches: ["main"]
  workflow_dispatch:
env:
  TZ: Asia/Shanghai
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: arm64
            tool: aarch64-linux-musl
            processor: aarch64
          - name: mipsel
            tool: mipsel-linux-musl
            processor: mipsel
          - name: amd64
            tool: x86_64-linux-musl
            processor: x86_64
    steps:
      - name: 检查代码仓库
        uses: actions/checkout@v4  # 使用最新版actions/checkout

      - name: 安装基础依赖
        run: |
          sudo apt-get update && sudo apt-get install -y cmake make  # 确保编译工具存在
      - name: 下载交叉编译链并解压
        run: |
          sudo mkdir -p /opt/x-tools
          # 增加重试机制，提高下载稳定性
          wget -c --tries=3 https://github.com/xf110/build-test/releases/download/n2n2/${{ matrix.tool }}-cross.tgz || { echo "下载编译链失败"; exit 1; }
          tar -xf ${{ matrix.tool }}-cross.tgz -C /opt/x-tools || { echo "解压编译链失败"; exit 1; }
          # 验证编译链是否存在
          if [ ! -f "/opt/x-tools/${{ matrix.tool }}-cross/bin/${{ matrix.tool }}-gcc" ]; then
            echo "编译链不存在"; exit 1;
          fi
      - name: 验证UPX工具
        run: |
          # 检查UPX是否存在并赋予权限
          if [ ! -f "upx3.95" ]; then
            echo "upx3.95文件缺失"; exit 1;
          fi
          sudo chmod +x upx3.95
      - name: 克隆源码并编译
        run: |
          # 克隆源码（确保递归克隆子模块）
          git clone --recursive https://github.com/xf110/n2n-2.8.x || { echo "克隆源码失败"; exit 1; }
          cd n2n-2.8.x || { echo "进入源码目录失败"; exit 1; }
          # 精确关闭AES加密（匹配完整行，避免误改）
          sed -i 's/OPTION(N2N_OPTION_AES "USE AES" ON)/OPTION(N2N_OPTION_AES "USE AES" OFF)/g' ./CMakeLists.txt
          # 创建编译目录
          mkdir -p build && cd build || { echo "创建编译目录失败"; exit 1; }
          # CMake交叉编译配置（明确指定目标系统、处理器和编译器）
          cmake .. \
            -DCMAKE_SYSTEM_NAME=Linux \
            -DCMAKE_SYSTEM_PROCESSOR=${{ matrix.processor }} \
            -DCMAKE_C_COMPILER=/opt/x-tools/${{ matrix.tool }}-cross/bin/${{ matrix.tool }}-gcc \
            -DCMAKE_EXE_LINKER_FLAGS=-static || { echo "CMake配置失败"; exit 1; }
          # 编译（使用-j加速，失败时输出详细日志）
          make -j$(nproc) || { echo "编译失败"; exit 1; }
          # 剥离二进制文件
          /opt/x-tools/${{ matrix.tool }}-cross/bin/${{ matrix.tool }}-strip edge supernode || { echo "剥离失败"; exit 1; }
          # 压缩（失败不终止，仅警告）
          ../../upx3.95 --best --ultra-brute edge || echo "UPX压缩edge失败，跳过"
          ../../upx3.95 --best --ultra-brute supernode || echo "UPX压缩supernode失败，跳过"
          # 重命名二进制文件
          mv edge edge_${{ matrix.name }}
          mv supernode supernode_${{ matrix.name }}
      - name: 上传 artifacts
        uses: actions/upload-artifact@v4
        with:
          name: n2n-2.8.x-${{ matrix.name }}
          path: |
            n2n-2.8.x/build/edge_${{ matrix.name }}
            n2n-2.8.x/build/supernode_${{ matrix.name }}
