name: natmap通用版
on:
  workflow_dispatch
env:
  TZ: Asia/Shanghai
jobs:
   build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: arm64
            tool: aarch64-linux-musl
          - name: mips32el
            tool: mipsel-linux-musl
          - name: x86_64
            tool: x86_64-linux-musl
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          submodules: true
      - name: Build ${{ matrix.name }}
        run: |
          ##########建立编译链目录，下载交叉编译链并解压##########
          sudo mkdir -p /opt/x-tools
          wget -q https://musl.cc/${{ matrix.tool }}-cross.tgz
          sudo tar xvf ${{ matrix.tool }}-cross.tgz -C /opt/x-tools
          
          ##########下载源码##########
          git clone --recursive https://github.com/heiher/natmap.git
          cd natmap
          ##########开始静态编译##########
          make CROSS_PREFIX=/opt/x-tools/${{ matrix.tool }}-cross/bin/${{ matrix.tool }}- CFLAGS=${{ matrix.env.CFLAGS }} ENABLE_STATIC=1 -j`nproc`
          ##########对编译的软件极限压缩##########
          sudo apt-get install -y upx-ucl
          upx --best --ultra-brute bin/natmap
          mv bin/natmap bin/natmap_${{ matrix.name }}
          
      - 
        name: 上传
        uses: actions/upload-artifact@master
        if: always()
        with:
          name: natmap-linux-${{ matrix.name }}
          path: natmap/bin/natmap
      - name: 发布
        uses: ncipollo/release-action@main
        with:
          tag: natmap
          artifacts: natmap/bin/natmap_${{ matrix.name }}
          token: ${{ secrets.test }}
          allowUpdates: true
          omitBodyDuringUpdate: true
