name: 多架构编译 sshpass

on:
  workflow_dispatch:  # 支持手动触发

jobs:
  build:
    name: 编译 ${{ matrix.arch }} 架构
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]

    steps:
      - name: 克隆 kevinburke/sshpass 仓库
        run: |
          git clone https://github.com/kevinburke/sshpass.git
          cd sshpass  # 进入仓库目录

      - name: 安装基础依赖（所有架构）
        run: |
          cd sshpass  # 确保在仓库目录内操作
          sudo apt-get update
          sudo apt-get install -y build-essential autoconf automake

      - name: 安装arm64交叉编译依赖
        if: matrix.arch == 'arm64'
        run: |
          cd sshpass
          sudo apt-get install -y crossbuild-essential-arm64

      - name: 生成configure脚本
        run: |
          cd sshpass
          autoreconf -fiv  # 生成构建所需的configure脚本

      - name: 配置编译（amd64）
        if: matrix.arch == 'amd64'
        run: |
          cd sshpass
          ./configure

      - name: 配置编译（arm64）
        if: matrix.arch == 'arm64'
        run: |
          cd sshpass
          ./configure --host=aarch64-linux-gnu

      - name: 编译
        run: |
          cd sshpass
          make

      - name: 验证产物架构
        run: |
          cd sshpass
          file sshpass  # 输出二进制文件的架构信息

      - name: 上传编译产物
        uses: actions/upload-artifact@v4
        with:
          name: sshpass-${{ matrix.arch }}
          path: sshpass/sshpass  # 指定二进制文件路径
